[
    {
    "Description": "",
    "Name": "CreateNewPolicyVersion",
    "ActionsNeeded": [
      "iam:CreatePolicyVersion"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "SetExistingDefaultPolicyVersion",
    "ActionsNeeded": [
      "iam:SetDefaultPolicyVersion"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "CreateEC2WithExistingIP",
    "ActionsNeeded": [
      "iam:PassRole",
      "ec2:RunInstances"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "CreateAccessKey",
    "ActionsNeeded": [
      "iam:CreateAccessKey"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "CreateLoginProfile",
    "ActionsNeeded": [
      "iam:CreateLoginProfile"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "UpdateLoginProfile",
    "ActionsNeeded": [
      "iam:UpdateLoginProfile"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "AttachRolePolicy",
    "ActionsNeeded": [
      "iam:AttachRolePolicy"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PutRolePolicy",
    "ActionsNeeded": [
      "iam:PutRolePolicy"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "UpdateRolePolicyToAssumeIt",
    "ActionsNeeded": [
      "iam:UpdateAssumeRolePolicy",
      "sts:AssumeRole"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewLambdaThenInvoke",
    "ActionsNeeded": [
      "iam:PassRole",
      "lambda:CreateFunction",
      "lambda:InvokeFunction"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewLambdaThenInvokeCrossAccount",
    "ActionsNeeded": [
      "iam:PassRole",
      "lambda:CreateFunction",
      "lambda:AddPermission"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
    "ActionsNeeded": [
      "iam:PassRole",
      "lambda:CreateFunction",
      "lambda:CreateEventSourceMapping",
      "dynamodb:CreateTable",
      "dynamodb:PutItem"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
    "ActionsNeeded": [
      "iam:PassRole",
      "lambda:CreateFunction",
      "lambda:CreateEventSourceMapping"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewGlueDevEndpoint",
    "ActionsNeeded": [
      "iam:PassRole",
      "glue:CreateDevEndpoint",
      "glue:GetDevEndpoint"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "UpdateExistingGlueDevEndpoint",
    "ActionsNeeded": [
      "glue:UpdateDevEndpoint"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewCloudFormation",
    "ActionsNeeded": [
      "iam:PassRole",
      "cloudformation:CreateStack"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewDataPipeline",
    "ActionsNeeded": [
      "iam:PassRole",
      "datapipeline:CreatePipeline",
      "datapipeline:PutPipelineDefinition"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "EditExistingLambdaFunctionWithRole",
    "ActionsNeeded": [
      "lambda:UpdateFunctionCode"
    ],"AllOrNone":true
  },
  {
    "Description": "",
    "Name": "PassExistingRoleToNewCodeStarProject",
    "ActionsNeeded": [
      "codestar:CreateProject",
      "iam:PassRole"
    ],"AllOrNone":true
  }
]